- hosts: workers
  remote_user: vagrant
  become: yes

  tasks:
    - name: disable eth0 link permanently
      lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-eth0
        regexp: '^ONBOOT'
        line: ONBOOT="no"

    - name: add default route permanently
      lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-eth1
        insertafter: EOF
        line: 'GATEWAY=172.16.79.2'

    - name: add DNS server address permanently
      lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-eth1
        insertafter: EOF
        line: 'DNS1=8.8.8.8'

    - name: disable swap
      shell: "/sbin/swapoff -a && sed -i '/ swap / s/^/#/' /etc/fstab"

    - name: stop firewalld
      command: systemctl stop firewalld

    - name: disable firewalld
      command: systemctl disable firewalld

    - name: upgrade all packages
      yum:
        name: '*'
        state: latest
        update_cache: yes

    - name: install iptables-services
      yum:
        name: iptables-services
        state: present

    - name: load br_netfilter kernel nmodule
      command: modprobe br_netfilter
    
    - name: load br_netfilter kernel nmodule permanently
      lineinfile:
        path: /etc/modules-load.d/br_netfilter.conf
        line: 'br_netfilter'
        create: yes

    - name: set kernel parameter 01
      command: sysctl net.ipv4.ip_forward=1

    - name: set kernel parameter 02
      command: sysctl net.bridge.bridge-nf-call-iptables=1

    - name: set kernel parameter 01 permanently
      shell: "echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.d/k8s.conf"

    - name: set kernel parameter 02 permanently
      shell: "echo net.bridge.bridge-nf-call-iptables=1 >> /etc/sysctl.d/k8s.conf"

    - name: start iptables.service
      command: systemctl start iptables

    - name: enable iptables.service
      command: systemctl enable iptables

    - name: Remove /etc/sysconfig/iptables file
      file:
        path: /etc/sysconfig/iptables
        state: absent

    - name: Add iptables rules on workers
      lineinfile:
        path: /etc/sysconfig/iptables
        create: yes
        line: "{{ item }}"
        state: present
      with_items:
          - '# you can edit this manually or use system-config-firewall'
          - '# please do not ask us to add additional ports/services to this default configuration'
          - '*filter'
          - ':INPUT ACCEPT [0:0]'
          - ':FORWARD ACCEPT [0:0]'
          - ':OUTPUT ACCEPT [0:0]'
          - '-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT'
          - '-A INPUT -p icmp -j ACCEPT'
          - '-A INPUT -i lo -j ACCEPT'
          - '-A INPUT -p tcp -s 172.16.79.0/24 -m state --state NEW -m tcp --dport 22 -j ACCEPT'
          - '-A INPUT -p tcp -s 172.16.79.0/24 -m state --state NEW -m tcp --dport 80 -j ACCEPT'
          - '-A INPUT -p tcp -s 172.16.79.0/24 -m state --state NEW -m tcp --dport 443 -j ACCEPT'
          - '-A INPUT -p udp -s 172.16.79.0/24 -m state --state NEW -m udp --dport 8472 -j ACCEPT'
          - '-A INPUT -p tcp -s 172.16.79.0/24 -m state --state NEW -m tcp --dport 10250 -j ACCEPT'
          - '-A INPUT -p tcp -s 172.16.79.0/24 -m state --state NEW -m multiport --dports 30000:32767 -j ACCEPT'
          - '-A INPUT -p udp -s 172.16.79.0/24 -m state --state NEW -m multiport --dports 30000:32767 -j ACCEPT'
          - '-A INPUT -j REJECT --reject-with icmp-host-prohibited'
          - 'COMMIT'

    - name: install docker required packages
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: set docker repo
      command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: upgrade all packages
      yum:
        name: '*'
        state: latest
        update_cache: yes

    - name: install docker engine
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: create /etc/docker directory
      file:
        path: /etc/docker
        state: directory
        mode: '0664'

    - name: setup docker daemon
      lineinfile:
        path: /etc/docker/daemon.json
        create: yes
        line: "{{ item }}"
        state: present
      with_items:
          - '{'
          - '    "exec-opts": ["native.cgroupdriver=systemd"],'
          - '    "log-driver": "json-file",'
          - '    "log-opts": {"max-size": "100m"},'
          - '    "storage-driver": "overlay2",'
          - '    "storage-opts": ["overlay2.override_kernel_check=true"]'
          - '}'

    - name: start docker CRI
      command: systemctl start docker

    - name: enable docker CRI
      command: systemctl enable docker

    - name: set google kubernetes repo
      blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        create: yes
        block: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

      # Set SELinux in permissive mode (effectively disabling it)
    - name: disable SELinux
      shell: "setenforce 0 && sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config"

    - name: install kubelet kubeadm kubectl
      yum:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        disable_excludes: kubernetes

    - name: enable kubelet service
      command: systemctl enable --now kubelet

    - name: add hosts to /etc/hosts
      blockinfile:
        path: /etc/hosts
        block: |
          172.16.79.11 k8s.lunatest.nl
          172.16.79.11 master-1
          172.16.79.21 worker-1
          172.16.79.22 worker-2
          172.16.79.31 lb-1

    - name: reboot the machine
      reboot:

    - name: Copy the join command to server location
      copy: src=join-command dest=/tmp/join-command.sh mode=0777

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh